// src/app/pages/account/AccountAddresses.tsximport React, { useState } from "react";import { Link } from "react-router-dom";import { MapPin, Plus, Edit3, Trash2, Home, Building, User } from "lucide-react";interface Address {  id: string;  type: 'home' | 'work' | 'other';  isDefault: boolean;  firstName: string;  lastName: string;  company?: string;  address1: string;  address2?: string;  city: string;  state: string;  zipCode: string;  country: string;  phone?: string;}const AccountAddresses: React.FC = () => {  const [addresses, setAddresses] = useState<Address[]>([    {      id: "1",      type: "home",      isDefault: true,      firstName: "John",      lastName: "Doe",      address1: "123 Main Street",      address2: "Apt 4B",      city: "New York",      state: "NY",      zipCode: "10001",      country: "United States",      phone: "+1 (555) 123-4567"    },    {      id: "2",      type: "work",      isDefault: false,      firstName: "John",      lastName: "Doe",      company: "Tech Corp Inc.",      address1: "456 Business Ave",      city: "New York",      state: "NY",      zipCode: "10002",      country: "United States",      phone: "+1 (555) 987-6543"    }  ]);  const [showModal, setShowModal] = useState(false);  const [editingAddress, setEditingAddress] = useState<Address | null>(null);  const [formData, setFormData] = useState<Partial<Address>>({    type: 'home',    isDefault: false,    firstName: '',    lastName: '',    company: '',    address1: '',    address2: '',    city: '',    state: '',    zipCode: '',    country: 'United States',    phone: ''  });  const handleAddAddress = () => {    setEditingAddress(null);    setFormData({      type: 'home',      isDefault: false,      firstName: '',      lastName: '',      company: '',      address1: '',      address2: '',      city: '',      state: '',      zipCode: '',      country: 'United States',      phone: ''    });    setShowModal(true);  };  const handleEditAddress = (address: Address) => {    setEditingAddress(address);    setFormData(address);    setShowModal(true);  };  const handleDeleteAddress = (addressId: string) => {    if (window.confirm('Are you sure you want to delete this address?')) {      setAddresses(prev => prev.filter(addr => addr.id !== addressId));    }  };  const handleSetDefault = (addressId: string) => {    setAddresses(prev => prev.map(addr => ({      ...addr,      isDefault: addr.id === addressId    })));  };  const handleSaveAddress = (e: React.FormEvent) => {    e.preventDefault();        if (editingAddress) {      // Update existing address      setAddresses(prev => prev.map(addr =>         addr.id === editingAddress.id           ? { ...formData as Address, id: editingAddress.id }          : addr      ));    } else {      // Add new address      const newAddress: Address = {        ...formData as Address,        id: Date.now().toString()      };      setAddresses(prev => [...prev, newAddress]);    }        setShowModal(false);  };  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {    const { name, value, type } = e.target;    setFormData(prev => ({      ...prev,      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value    }));  };  const getAddressTypeIcon = (type: Address['type']) => {    switch (type) {      case 'home':        return <Home size={16} />;      case 'work':        return <Building size={16} />;      default:        return <MapPin size={16} />;    }  };  const getAddressTypeLabel = (type: Address['type']) => {    switch (type) {      case 'home':        return 'Home';      case 'work':        return 'Work';      default:        return 'Other';    }  };  return (    <div className="acc-addresses-container">      {/* Page Header */}      <div className="acc-page-header">        <div>          <h1 className="acc-page-title">Address Book</h1>          <p className="acc-page-subtitle">            Manage your saved addresses ({addresses.length} addresses)          </p>        </div>        <button className="acc-btn acc-btn-primary" onClick={handleAddAddress}>          <Plus size={16} style={{ marginRight: '8px' }} />          Add Address        </button>      </div>      {/* Addresses Grid */}      {addresses.length === 0 ? (        <div className="acc-card">          <div className="acc-card-body">            <div style={{              textAlign: 'center',              padding: 'var(--spacing-12) var(--spacing-4)'            }}>              <MapPin                 size={64}                 style={{                  color: 'var(--text-color-light)',                  marginBottom: 'var(--spacing-4)',                  display: 'block',                  margin: '0 auto var(--spacing-4)'                }}              />              <h3 style={{                fontSize: 'var(--font-size-xl)',                fontWeight: 'var(--font-weight-semibold)',                color: 'var(--text-color)',                marginBottom: 'var(--spacing-2)'              }}>No addresses saved</h3>              <p style={{                color: 'var(--text-color-medium)',                marginBottom: 'var(--spacing-4)',                fontSize: 'var(--font-size-base)',                maxWidth: '400px',                margin: '0 auto var(--spacing-4)'              }}>                Add your shipping and billing addresses for faster checkout.              </p>              <button className="acc-btn acc-btn-primary" onClick={handleAddAddress}>                <Plus size={16} style={{ marginRight: '8px' }} />                Add Your First Address              </button>            </div>          </div>        </div>      ) : (        <div style={{          display: 'grid',          gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))',          gap: 'var(--spacing-4)'        }}>          {addresses.map((address) => (            <div key={address.id} className="acc-card" style={{ position: 'relative' }}>              {/* Default Badge */}              {address.isDefault && (                <div style={{                  position: 'absolute',                  top: 'var(--spacing-3)',                  right: 'var(--spacing-3)',                  backgroundColor: 'var(--success-color)',                  color: 'var(--white)',                  padding: 'var(--spacing-1) var(--spacing-2)',                  borderRadius: 'var(--border-radius)',                  fontSize: 'var(--font-size-xs)',                  fontWeight: 'var(--font-weight-bold)',                  zIndex: 1                }}>                  DEFAULT                </div>              )}              <div className="acc-card-header">                <h3 className="acc-card-title">                  {getAddressTypeIcon(address.type)}                  {getAddressTypeLabel(address.type)} Address                </h3>              </div>              <div className="acc-card-body">                {/* Name and Company */}                <div style={{ marginBottom: 'var(--spacing-3)' }}>                  <h5 style={{                    fontSize: 'var(--font-size-base)',                    fontWeight: 'var(--font-weight-medium)',                    color: 'var(--text-color)',                    marginBottom: 'var(--spacing-1)'                  }}>                    {address.firstName} {address.lastName}                  </h5>                  {address.company && (                    <p style={{                      fontSize: 'var(--font-size-sm)',                      color: 'var(--text-color-medium)',                      margin: 0                    }}>                      {address.company}                    </p>                  )}                </div>                {/* Address */}                <div style={{                  marginBottom: 'var(--spacing-3)',                  lineHeight: 'var(--line-height-normal)'                }}>                  <p style={{                    fontSize: 'var(--font-size-sm)',                    color: 'var(--text-color)',                    margin: 0,                    marginBottom: 'var(--spacing-1)'                  }}>                    {address.address1}                  </p>                  {address.address2 && (                    <p style={{                      fontSize: 'var(--font-size-sm)',                      color: 'var(--text-color)',                      margin: 0,                      marginBottom: 'var(--spacing-1)'                    }}>                      {address.address2}                    </p>                  )}                  <p style={{                    fontSize: 'var(--font-size-sm)',                    color: 'var(--text-color)',                    margin: 0                  }}>                    {address.city}, {address.state} {address.zipCode}                  </p>                  <p style={{                    fontSize: 'var(--font-size-sm)',                    color: 'var(--text-color-medium)',                    margin: 0                  }}>                    {address.country}                  </p>                </div>                {/* Phone */}                {address.phone && (                  <p style={{                    fontSize: 'var(--font-size-sm)',                    color: 'var(--text-color-medium)',                    marginBottom: 'var(--spacing-4)'                  }}>                    <i className="bi bi-telephone" style={{ marginRight: '8px' }}></i>                    {address.phone}                  </p>                )}                {/* Actions */}                <div style={{                  display: 'grid',                  gridTemplateColumns: address.isDefault ? '1fr auto auto' : '1fr auto auto auto',                  gap: 'var(--spacing-2)',                  paddingTop: 'var(--spacing-3)',                  borderTop: '1px solid var(--border-color)'                }}>                  {!address.isDefault && (                    <button                      className="acc-btn acc-btn-outline acc-btn-sm"                      onClick={() => handleSetDefault(address.id)}                      style={{ fontSize: 'var(--font-size-xs)' }}                    >                      Set Default                    </button>                  )}                                    <button                    className="acc-btn acc-btn-outline acc-btn-sm"                    onClick={() => handleEditAddress(address)}                    style={{ fontSize: 'var(--font-size-xs)' }}                  >                    <Edit3 size={12} />                  </button>                                    <button                    className="acc-btn acc-btn-outline acc-btn-sm"                    onClick={() => handleDeleteAddress(address.id)}                    style={{                       color: 'var(--danger-color)',                       borderColor: 'var(--danger-color)',                      fontSize: 'var(--font-size-xs)'                    }}                  >                    <Trash2 size={12} />                  </button>                </div>              </div>            </div>          ))}        </div>      )}      {/* Add/Edit Address Modal */}      {showModal && (        <div style={{          position: 'fixed',          top: 0,          left: 0,          right: 0,          bottom: 0,          backgroundColor: 'rgba(0,0,0,0.5)',          display: 'flex',          alignItems: 'center',          justifyContent: 'center',          zIndex: 1050,          padding: 'var(--spacing-4)'        }}>          <div style={{            backgroundColor: 'var(--white)',            borderRadius: 'var(--border-radius)',            maxWidth: '500px',            width: '100%',            maxHeight: '90vh',            overflow: 'auto'          }}>            <div className="acc-card-header">              <h3 className="acc-card-title">                <MapPin size={20} />                {editingAddress ? 'Edit Address' : 'Add New Address'}              </h3>              <button                onClick={() => setShowModal(false)}                style={{                  background: 'none',                  border: 'none',                  fontSize: 'var(--font-size-lg)',                  cursor: 'pointer',                  color: 'var(--text-color-medium)'                }}              >                ×              </button>            </div>            <div className="acc-card-body">              <form onSubmit={handleSaveAddress}>                {/* Address Type */}                <div className="acc-form-group">                  <label className="acc-form-label">Address Type</label>                  <select                    name="type"                    value={formData.type}                    onChange={handleInputChange}                    className="acc-form-control"                    required                  >                    <option value="home">Home</option>                    <option value="work">Work</option>                    <option value="other">Other</option>                  </select>                </div>                {/* Name Fields */}                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 'var(--spacing-3)' }}>                  <div className="acc-form-group">                    <label className="acc-form-label">First Name</label>                    <input                      type="text"                      name="firstName"                      value={formData.firstName}                      onChange={handleInputChange}                      className="acc-form-control"                      required                    />                  </div>                  <div className="acc-form-group">                    <label className="acc-form-label">Last Name</label>                    <input                      type="text"                      name="lastName"                      value={formData.lastName}                      onChange={handleInputChange}                      className="acc-form-control"                      required                    />                  </div>                </div>                {/* Company */}                <div className="acc-form-group">                  <label className="acc-form-label">Company (Optional)</label>                  <input                    type="text"                    name="company"                    value={formData.company}                    onChange={handleInputChange}                    className="acc-form-control"                  />                </div>                {/* Address Fields */}                <div className="acc-form-group">                  <label className="acc-form-label">Address Line 1</label>                  <input                    type="text"                    name="address1"                    value={formData.address1}                    onChange={handleInputChange}                    className="acc-form-control"                    required                  />                </div>                <div className="acc-form-group">                  <label className="acc-form-label">Address Line 2 (Optional)</label>                  <input                    type="text"                    name="address2"                    value={formData.address2}                    onChange={handleInputChange}                    className="acc-form-control"                  />                </div>                {/* City, State, Zip */}                <div style={{ display: 'grid', gridTemplateColumns: '2fr 1fr 1fr', gap: 'var(--spacing-3)' }}>                  <div className="acc-form-group">                    <label className="acc-form-label">City</label>                    <input                      type="text"                      name="city"                      value={formData.city}                      onChange={handleInputChange}                      className="acc-form-control"                      required                    />                  </div>                  <div className="acc-form-group">                    <label className="acc-form-label">State</label>                    <input                      type="text"                      name="state"                      value={formData.state}                      onChange={handleInputChange}                      className="acc-form-control"                      required                    />                  </div>                  <div className="acc-form-group">                    <label className="acc-form-label">ZIP Code</label>                    <input                      type="text"                      name="zipCode"                      value={formData.zipCode}                      onChange={handleInputChange}                      className="acc-form-control"                      required                    />                  </div>                </div>                {/* Country */}                <div className="acc-form-group">                  <label className="acc-form-label">Country</label>                  <select                    name="country"                    value={formData.country}                    onChange={handleInputChange}                    className="acc-form-control"                    required                  >                    <option value="United States">United States</option>                    <option value="Canada">Canada</option>                    <option value="United Kingdom">United Kingdom</option>                    <option value="Australia">Australia</option>                    <option value="Germany">Germany</option>                    <option value="France">France</option>                  </select>                </div>                {/* Phone */}                <div className="acc-form-group">                  <label className="acc-form-label">Phone Number (Optional)</label>                  <input                    type="tel"                    name="phone"                    value={formData.phone}                    onChange={handleInputChange}                    className="acc-form-control"                  />                </div>                {/* Set as Default */}                <div className="acc-form-group">                  <label style={{                    display: 'flex',                    alignItems: 'center',                    gap: 'var(--spacing-2)',                    cursor: 'pointer',                    fontSize: 'var(--font-size-sm)',                    fontWeight: 'var(--font-weight-medium)'                  }}>                    <input                      type="checkbox"                      name="isDefault"                      checked={formData.isDefault}                      onChange={handleInputChange}                    />                    Set as default address                  </label>                </div>                {/* Form Actions */}                <div style={{                  display: 'flex',                  gap: 'var(--spacing-3)',                  paddingTop: 'var(--spacing-4)',                  borderTop: '1px solid var(--border-color)',                  justifyContent: 'flex-end'                }}>                  <button                    type="button"                    className="acc-btn acc-btn-outline"                    onClick={() => setShowModal(false)}                  >                    Cancel                  </button>                  <button type="submit" className="acc-btn acc-btn-primary">                    {editingAddress ? 'Update Address' : 'Add Address'}                  </button>                </div>              </form>            </div>          </div>        </div>      )}    </div>  );};export default AccountAddresses;