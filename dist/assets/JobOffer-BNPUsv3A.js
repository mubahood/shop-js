var h=Object.defineProperty;var p=(f,e,r)=>e in f?h(f,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):f[e]=r;var o=(f,e,r)=>p(f,typeof e!="symbol"?e+"":e,r);import{ag as d,L as m}from"./index-D3ojX_Fy.js";class c{constructor(){o(this,"id","");o(this,"created_at","");o(this,"updated_at","");o(this,"job_title","");o(this,"company_name","");o(this,"salary","");o(this,"start_date","");o(this,"job_description","");o(this,"candidate_id","");o(this,"company_id","");o(this,"status","");o(this,"candidate_message","");o(this,"candidate_text","");o(this,"company_text","")}updateOffer(e){Object.assign(this,e)}toJSON(){const e={};for(const r in this)Object.prototype.hasOwnProperty.call(this,r)&&(e[r]=this[r]);return e}static fromJson(e){const r=new c;let t=typeof e=="string"?{}:e;if(typeof e=="string")try{t=JSON.parse(e)}catch{return r}const s=Object.keys(r);for(const a of Object.keys(t))s.includes(a)&&(r[a]=t[a]);return r}static async fetchMyOffers(e=1,r={}){try{const t=new URLSearchParams({page:String(e),...Object.fromEntries(Object.entries(r).map(([n,i])=>[n,String(i)]))}),s=await d(`/my-job-offers?${t.toString()}`);if(s.code!==1)throw new Error(s.message||"Failed to fetch my job offers.");const a=s.data;return a.data=a.data.map(n=>c.fromJson(n)),a}catch(t){throw console.error("Error fetching my job offers:",t),t}}static async fetchCompanyOffers(e=1,r={}){try{const t=new URLSearchParams({page:String(e),...Object.fromEntries(Object.entries(r).map(([n,i])=>[n,String(i)]))}),s=await d(`/company-job-offers?${t.toString()}`);if(s.code!==1)throw new Error(s.message||"Failed to fetch company job offers.");const a=s.data;return a.data=a.data.map(n=>c.fromJson(n)),a}catch(t){throw console.error("Error fetching company job offers:",t),t}}static async fetchOfferById(e){try{const r=await d(`/job-offers/${e}`);if(r.code!==1)throw new Error(r.message||"Failed to fetch job offer.");return c.fromJson(r.data)}catch(r){throw console.error("Error fetching job offer by ID:",r),r}}static async createOffer(e){try{const r=await m("/job-offers",e);if(r.code!==1)throw new Error(r.message||"Failed to create job offer.");return c.fromJson(r.data)}catch(r){throw console.error("Error creating job offer:",r),r}}static async updateOffer(e,r){try{const t=await m(`/job-offers/${e}?_method=PUT`,r);if(t.code!==1)throw new Error(t.message||"Failed to update job offer.");return c.fromJson(t.data)}catch(t){throw console.error("Error updating job offer:",t),t}}static async deleteOffer(e){try{const r=await m(`/job-offers/${e}?_method=DELETE`,{});if(r.code!==1)throw new Error(r.message||"Failed to delete job offer.");return!0}catch(r){throw console.error("Error deleting job offer:",r),r}}}export{c as J};
