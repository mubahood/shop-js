var m=Object.defineProperty;var y=(c,a,r)=>a in c?m(c,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):c[a]=r;var e=(c,a,r)=>y(c,typeof a!="symbol"?a+"":a,r);import{ag as d,L as p}from"./index-D3ojX_Fy.js";class _{constructor(){e(this,"id","");e(this,"username","");e(this,"password","");e(this,"name","");e(this,"avatar","");e(this,"remember_token","");e(this,"created_at","");e(this,"updated_at","");e(this,"enterprise_id","");e(this,"first_name","");e(this,"last_name","");e(this,"date_of_birth","");e(this,"place_of_birth","");e(this,"sex","");e(this,"home_address","");e(this,"current_address","");e(this,"phone_number_1","");e(this,"phone_number_2","");e(this,"email","");e(this,"nationality","");e(this,"religion","");e(this,"spouse_name","");e(this,"spouse_phone","");e(this,"father_name","");e(this,"father_phone","");e(this,"mother_name","");e(this,"mother_phone","");e(this,"languages","");e(this,"emergency_person_name","");e(this,"emergency_person_phone","");e(this,"national_id_number","");e(this,"passport_number","");e(this,"tin","");e(this,"nssf_number","");e(this,"bank_name","");e(this,"bank_account_number","");e(this,"primary_school_name","");e(this,"primary_school_year_graduated","");e(this,"seconday_school_name","");e(this,"seconday_school_year_graduated","");e(this,"high_school_name","");e(this,"high_school_year_graduated","");e(this,"degree_university_name","");e(this,"degree_university_year_graduated","");e(this,"masters_university_name","");e(this,"masters_university_year_graduated","");e(this,"phd_university_name","");e(this,"phd_university_year_graduated","");e(this,"user_type","");e(this,"demo_id","");e(this,"user_id","");e(this,"user_batch_importer_id","");e(this,"school_pay_account_id","");e(this,"school_pay_payment_code","");e(this,"given_name","");e(this,"deleted_at","");e(this,"marital_status","");e(this,"verification","");e(this,"current_class_id","");e(this,"current_theology_class_id","");e(this,"status","");e(this,"parent_id","");e(this,"main_role_id","");e(this,"stream_id","");e(this,"account_id","");e(this,"has_personal_info","");e(this,"has_educational_info","");e(this,"has_account_info","");e(this,"diploma_school_name","");e(this,"diploma_year_graduated","");e(this,"certificate_school_name","");e(this,"certificate_year_graduated","");e(this,"company_id","");e(this,"managed_by","");e(this,"title","");e(this,"dob","");e(this,"intro","");e(this,"rate","");e(this,"can_evaluate","");e(this,"work_load_pending","");e(this,"work_load_completed","");e(this,"belongs_to_company","");e(this,"card_status","");e(this,"card_number","");e(this,"card_balance","");e(this,"card_accepts_credit","");e(this,"card_max_credit","");e(this,"card_accepts_cash","");e(this,"is_dependent","");e(this,"dependent_status","");e(this,"dependent_id","");e(this,"card_expiry","");e(this,"belongs_to_company_status","");e(this,"objective","");e(this,"special_qualification","");e(this,"career_summary","");e(this,"present_salary","");e(this,"expected_salary","");e(this,"expected_job_level","");e(this,"expected_job_nature","");e(this,"preferred_job_location","");e(this,"preferred_job_category","");e(this,"preferred_job_category_other","");e(this,"preferred_job_districts","");e(this,"preferred_job_abroad","");e(this,"preferred_job_countries","");e(this,"has_disability","");e(this,"is_registered_on_disability","");e(this,"disability_type","");e(this,"dificulty_to_see","");e(this,"dificulty_to_hear","");e(this,"dificulty_to_walk","");e(this,"dificulty_to_speak","");e(this,"dificulty_display_on_cv","");e(this,"country_code","");e(this,"blood_group","");e(this,"height","");e(this,"weight","");e(this,"company_name");e(this,"company_year_of_establishment");e(this,"company_employees_range");e(this,"company_country");e(this,"company_address");e(this,"company_district_id");e(this,"company_sub_county_id");e(this,"company_main_category_id");e(this,"company_sub_category_id");e(this,"company_phone_number");e(this,"company_description");e(this,"company_trade_license_no");e(this,"company_website_url");e(this,"company__email");e(this,"company__phone");e(this,"company_has_accessibility");e(this,"company_has_disability_inclusion_policy");e(this,"company_logo");e(this,"company_tax_id");e(this,"company_facebook_url");e(this,"company_linkedin_url");e(this,"company_operating_hours");e(this,"company_certifications");e(this,"company_ownership_type");e(this,"company_status");e(this,"is_company")}updateProfile(a){Object.assign(this,a)}toJSON(){const a={};for(const r in this)Object.prototype.hasOwnProperty.call(this,r)&&(a[r]=this[r]);return a}static fromJson(a){const r=new _;let o=typeof a=="string"?{}:a;if(typeof a=="string")try{o=JSON.parse(a)}catch{return r}const n=Object.keys(r);for(const t of Object.keys(o))n.includes(t)&&(r[t]=o[t]);return r}static async fetchJobs(a=1,r={}){try{const o=new URLSearchParams({page:String(a),...Object.fromEntries(Object.entries(r).map(([s,i])=>[s,String(i)]))}),n=await d(`/cvs?${o.toString()}`);if(n.code!==1)throw new Error(n.message||"Failed to fetch jobs.");const t=n.data;return t.data=t.data.map(s=>_.fromJson(s)),t}catch(o){throw console.error("Error fetching jobs:",o),o}}static async fetchMyJobs(a=1,r={}){try{const o=new URLSearchParams({page:String(a),...Object.fromEntries(Object.entries(r).map(([s,i])=>[s,String(i)]))}),n=await d(`/my-jobs?${o.toString()}`);if(console.log(n),n.code!==1)throw new Error(n.message||"Failed to fetch user jobs.");const t=n.data;return t.data=t.data.map(s=>_.fromJson(s)),t}catch(o){throw console.error("Error fetching my-jobs:",o),o}}static async fetchJobById(a){try{const r=await d(`/cvs/${a}`);if(console.log(r),r.code!==1)throw new Error(r.message||"Failed to fetch job.");return _.fromJson(r.data)}catch(r){throw console.error("Error fetching job by ID:",r),r}}static async createJob(a){try{const r=await p("/cvs",a);if(r.code!==1)throw new Error(r.message||"Failed to create job.");return _.fromJson(r.data)}catch(r){throw console.error("Error creating job:",r),r}}static async updateJob(a,r){try{const o=await p(`/cvs/${a}?_method=PUT`,r);if(o.code!==1)throw new Error(o.message||"Failed to update job.");return _.fromJson(o.data)}catch(o){throw console.error("Error updating job:",o),o}}static async deleteJob(a){try{const r=await p(`/cvs/${a}?_method=DELETE`,{});if(r.code!==1)throw new Error(r.message||"Failed to delete job.");return!0}catch(r){throw console.error("Error deleting job:",r),r}}}export{_ as C};
