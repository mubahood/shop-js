import{a3 as m,T as o,V as l,U as u}from"./index-Ck1B39s_.js";const d=[];class y{static onCartUpdate(t){return d.push(t),()=>{const s=d.indexOf(t);s>-1&&d.splice(s,1)}}static notifyListeners(){const t=this.getCartItems();d.forEach(s=>{try{s(t)}catch(e){console.error("Error in cart listener:",e)}}),window.dispatchEvent(new CustomEvent("cartUpdated",{detail:{items:t,count:t.length}}))}static getCartItems(){try{const t=localStorage.getItem(m);return t?JSON.parse(t):[]}catch(t){return console.error("Error loading cart items:",t),[]}}static saveCartItems(t){try{localStorage.setItem(m,JSON.stringify(t)),this.notifyListeners()}catch(s){console.error("Error saving cart items:",s),o.error("Failed to save cart")}}static addToCart(t,s=1,e={},r){try{const a=this.getCartItems(),n=JSON.stringify(e),i=a.findIndex(c=>c.product_id===t&&JSON.stringify(c.variant)===n);if(i>=0)a[i].quantity+=s,o.success(`Updated ${(r==null?void 0:r.name)||"product"} quantity in cart`);else{const c={product_id:t,quantity:s,variant:e,added_at:new Date().toISOString(),price:r==null?void 0:r.price,product_name:r==null?void 0:r.name};a.push(c),o.addToCart((r==null?void 0:r.name)||"Product")}return this.saveCartItems(a),!0}catch(a){return console.error("Error adding to cart:",a),o.error("Failed to add to cart"),!1}}static updateCartItem(t,s,e={}){try{const r=this.getCartItems(),a=JSON.stringify(e),n=r.findIndex(i=>i.product_id===t&&JSON.stringify(i.variant)===a);return n>=0?(s<=0?(r.splice(n,1),o.removeFromCart(r[n].product_name||"Product")):r[n].quantity=s,this.saveCartItems(r),!0):!1}catch(r){return console.error("Error updating cart item:",r),o.error("Failed to update cart"),!1}}static removeFromCart(t,s={}){try{const e=this.getCartItems(),r=JSON.stringify(s),a=e.findIndex(n=>n.product_id===t&&JSON.stringify(n.variant)===r);if(a>=0){const n=e[a];return e.splice(a,1),this.saveCartItems(e),o.removeFromCart(n.product_name||"Product"),!0}return!1}catch(e){return console.error("Error removing from cart:",e),o.error("Failed to remove from cart"),!1}}static clearCart(){try{return localStorage.removeItem(m),o.success("Cart cleared"),!0}catch(t){return console.error("Error clearing cart:",t),o.error("Failed to clear cart"),!1}}static async getDetailedCartItems(){const t=this.getCartItems(),s=[];for(const e of t)try{const r=await l.fetchProductById(e.product_id),a=parseFloat(r.price_1)*e.quantity;s.push({product:r,quantity:e.quantity,variant:e.variant,added_at:e.added_at,subtotal:a})}catch{console.warn(`Product ${e.product_id} not found, removing from cart`),this.removeFromCart(e.product_id,e.variant)}return s}static async getCartTotal(){return(await this.getDetailedCartItems()).reduce((s,e)=>s+e.subtotal,0)}static async getFormattedCartTotal(){const t=await this.getCartTotal();return u.moneyFormat(String(t))}static getCartItemCount(){return this.getCartItems().reduce((s,e)=>s+e.quantity,0)}static isInCart(t,s={}){const e=this.getCartItems(),r=JSON.stringify(s);return e.some(a=>a.product_id===t&&JSON.stringify(a.variant)===r)}static getProductQuantity(t,s={}){const e=this.getCartItems(),r=JSON.stringify(s),a=e.find(n=>n.product_id===t&&JSON.stringify(n.variant)===r);return a?a.quantity:0}static async syncWithServer(){try{return!0}catch(t){return console.error("Error syncing cart with server:",t),!1}}static async mergeGuestCart(t){try{const s=this.getCartItems(),e=[...t];for(const r of s){const a=JSON.stringify(r.variant),n=e.findIndex(i=>i.product_id===r.product_id&&JSON.stringify(i.variant)===a);n>=0?e[n].quantity+=r.quantity:e.push(r)}return this.saveCartItems(e),o.success("Cart synced successfully"),!0}catch(s){return console.error("Error merging guest cart:",s),o.error("Failed to sync cart"),!1}}static async validateCart(){try{const t=this.getCartItems(),s=[];let e=!1;for(const r of t)try{const a=await l.fetchProductById(r.product_id);a.isActive()&&a.isInStock()?s.push(r):(e=!0,console.warn(`Product ${r.product_id} is no longer available`))}catch{e=!0,console.warn(`Product ${r.product_id} not found`)}return e&&(this.saveCartItems(s),o.warning("Some items were removed from cart as they're no longer available")),!0}catch(t){return console.error("Error validating cart:",t),!1}}}export{y as C};
